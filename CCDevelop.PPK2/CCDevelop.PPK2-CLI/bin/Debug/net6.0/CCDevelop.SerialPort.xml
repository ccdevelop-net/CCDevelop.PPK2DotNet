<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CCDevelop.SerialPort</name>
    </assembly>
    <members>
        <member name="T:CCDevelop.SerialPort.SerialPortEx">
            <summary>
            Class that manages serial mail in an advanced way via events
            </summary>
        </member>
        <member name="T:CCDevelop.SerialPort.SerialPortEx.StatusConnectionChangedEventHandler">
            <summary>
            Delegate for serial connection status changed event.
            <param name="sender">Control that raises the event</param>
            <param name="args">Connection status <see cref="T:CCDevelop.SerialPort.StatusConnectionChangedEventArgs"/></param> 
            </summary>
        </member>
        <member name="T:CCDevelop.SerialPort.SerialPortEx.DataReceivedEventHandler">
            <summary>
            Delegate data received event. 
            <param name="sender">Control that raises the event</param>
            <param name="args">Serial data received <see cref="T:CCDevelop.SerialPort.DataReceivedEventArgs"/></param> 
            </summary>
        </member>
        <member name="E:CCDevelop.SerialPort.SerialPortEx.StatusConnectionChanged">
            <summary>
            Generated when connection change status. 
            </summary>
        </member>
        <member name="E:CCDevelop.SerialPort.SerialPortEx.DataReceived">
            <summary>
            Generated when data received. 
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.#ctor">
            <summary>
            Constructor of the class
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.#ctor(System.String)">
            <summary>
            Constructor of the class with port name parameter
            </summary>
            <param name="portName">Name of the serial port to set, default is empty</param>
        </member>
        <member name="P:CCDevelop.SerialPort.SerialPortEx.IsSerialConnected">
            <summary>
            Indicate if serial port is connected. 
            </summary>
        </member>
        <member name="P:CCDevelop.SerialPort.SerialPortEx.ReconnectionDelay">
            <summary>
            Serial port reconnection delay in milliseconds 
            </summary>
        </member>
        <member name="P:CCDevelop.SerialPort.SerialPortEx.Ports">
            <summary>
            Return the name of the ports 
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.PortsByDescription">
            <summary>
            Retrieve descriptions of the serial ports in the system 
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.Connect">
            <summary>
            Connect to the serial port.
            </summary>
            <returns>Return <c>true</c> if connected correctly, otherwise <c>false</c></returns>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.Disconnect">
            <summary>
            Disconnect serial port
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.SetPortInfo(System.String,System.Int32,System.IO.Ports.StopBits,System.IO.Ports.Parity,CCDevelop.SerialPort.DataBits)">
            <summary>
            Set the parameters of the serial line, if it is connected it automatically reconnects
            </summary>
            <param name="portName">Serial port name</param>
            <param name="baudRate">Serial baud rate</param>
            <param name="stopBits">Number of stop bits <seeref name="System.IO.Ports.StopBits"/></param>
            <param name="parity">Serial parity <seeref name="System.IO.Ports.Parity"/></param>
            <param name="dataBits">Serial data bits <seeref name="DataBits"/></param>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.SendData(System.Byte[])">
            <summary>
            Send a binary data array over serial
            </summary>
            <param name="data">Data to send</param>
            <returns>Return <c>true</c> if binary data sent correctly, otherwise <c>false</c></returns>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialPortEx.SendData(System.String)">
            <summary>
            Send a string over serial
            </summary>
            <param name="message">String to send</param>
            <returns>Return <c>true</c> if message sent correctly, otherwise <c>false</c></returns>
        </member>
        <member name="T:CCDevelop.SerialPort.DataBits">
            <summary>
            DataBits enumerator
            </summary>
        </member>
        <member name="F:CCDevelop.SerialPort.DataBits.Five">
            <summary>
            Five Bits
            </summary>
        </member>
        <member name="F:CCDevelop.SerialPort.DataBits.Six">
            <summary>
            Six Bits
            </summary>
        </member>
        <member name="F:CCDevelop.SerialPort.DataBits.Seven">
            <summary>
            Seven Bits
            </summary>
        </member>
        <member name="F:CCDevelop.SerialPort.DataBits.Eight">
            <summary>
            Eight Bits
            </summary>
        </member>
        <member name="F:CCDevelop.SerialPort.DataBits.Nine">
            <summary>
            Nine Bits
            </summary>
        </member>
        <member name="T:CCDevelop.SerialPort.StatusConnectionChangedEventArgs">
            <summary>
            Connected state changed event arguments. 
            </summary>
        </member>
        <member name="P:CCDevelop.SerialPort.StatusConnectionChangedEventArgs.Connected">
            <summary>
            Connected state of the serial port.
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.StatusConnectionChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            Create new instance of the StatusConnectionChangedEventArgs class. 
            </summary>
            <param name="state">State of serial port connection</param>
        </member>
        <member name="T:CCDevelop.SerialPort.DataReceivedEventArgs">
            <summary>
            Data received event arguments.
            </summary>
        </member>
        <member name="P:CCDevelop.SerialPort.DataReceivedEventArgs.Data">
            <summary>
            Data received
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.DataReceivedEventArgs.#ctor(System.Byte[])">
            <summary>
            Create new instance of the DataReceivedEventArgs class.
            </summary>
            <param name="data">Received data to set</param>
        </member>
        <member name="T:CCDevelop.SerialPort.SerialErrorEventArgs">
            <summary>
            Serial error event arguments.
            </summary>
        </member>
        <member name="P:CCDevelop.SerialPort.SerialErrorEventArgs.ErrorDescription">
            <summary>
            Description of the error
            </summary>
        </member>
        <member name="M:CCDevelop.SerialPort.SerialErrorEventArgs.#ctor(System.String)">
            <summary>
            Create new instance of the SerialErrorEventArgs class. 
            </summary>
            <param name="errorDescription">Error description to notify</param>
        </member>
    </members>
</doc>
